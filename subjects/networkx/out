networkx.algorithms.isomorphism.isomorphvf2.DiGMState <*> {GM$$networkx.algorithms.isomorphism.vf2userfunc.DiGraphMatcher <*> {G1$$networkx.classes.digraph.DiGraph <*> {graph$$builtins.dict,_node$$builtins.dict,_adj$$builtins.dict,_succ$$builtins.dict,_pred$$builtins.dict,succ$$networkx.classes.coreviews.AdjacencyView <*> {},edges$$networkx.classes.reportviews.OutEdgeView <*> {},nodes$$networkx.classes.reportviews.NodeView <*> {},adj$$networkx.classes.coreviews.AdjacencyView <*> {},degree$$networkx.classes.reportviews.DiDegreeView <*> {_graph$$networkx.classes.digraph.DiGraph rec-ref,_succ$$builtins.dict,_pred$$builtins.dict,_nodes$$builtins.dict,_weight$$builtins.NoneType,},pred$$networkx.classes.coreviews.AdjacencyView <*> {},},G2$$networkx.classes.digraph.DiGraph <*> {graph$$builtins.dict,_node$$builtins.dict,_adj$$builtins.dict,_succ$$builtins.dict,_pred$$builtins.dict,adj$$networkx.classes.coreviews.AdjacencyView <*> {},nodes$$networkx.classes.reportviews.NodeView <*> {},},G1_nodes$$builtins.set,G2_nodes$$builtins.set,G2_node_order$$builtins.dict,old_recursion_limit$$builtins.int,test$$builtins.str,core_1$$builtins.dict,core_2$$builtins.dict,in_1$$builtins.dict,in_2$$builtins.dict,out_1$$builtins.dict,out_2$$builtins.dict,},G1_node$$builtins.NoneType,G2_node$$builtins.NoneType,depth$$builtins.int,}
networkx.algorithms.isomorphism.isomorphvf2.DiGMState <*> {GM$$networkx.algorithms.isomorphism.vf2userfunc.DiGraphMatcher <*> {G1$$networkx.classes.digraph.DiGraph <*> {graph$$builtins.dict,_node$$builtins.dict,_adj$$builtins.dict,_succ$$builtins.dict,_pred$$builtins.dict,succ$$networkx.classes.coreviews.AdjacencyView <*> {},edges$$networkx.classes.reportviews.OutEdgeView <*> {},nodes$$networkx.classes.reportviews.NodeView <*> {},},G2$$networkx.classes.digraph.DiGraph <*> {graph$$builtins.dict,_node$$builtins.dict,_adj$$builtins.dict,_succ$$builtins.dict,_pred$$builtins.dict,adj$$networkx.classes.coreviews.AdjacencyView <*> {},nodes$$networkx.classes.reportviews.NodeView <*> {},},G1_nodes$$builtins.set,G2_nodes$$builtins.set,G2_node_order$$builtins.dict,old_recursion_limit$$builtins.int,test$$builtins.str,core_1$$builtins.dict,core_2$$builtins.dict,in_1$$builtins.dict,in_2$$builtins.dict,out_1$$builtins.dict,out_2$$builtins.dict,},G1_node$$builtins.NoneType,G2_node$$builtins.NoneType,depth$$builtins.int,}