statsmodels.stats.power.NormalIndPower.cache_fit_res
{'missing', 'builtins.list'}
 /home/user/purepython/cpython-3.9/my_purepy/lib/python3.9/site-packages/statsmodels/stats/tests/test_power.py-test_power_solver-722
    assert_equal(nip.cache_fit_res[0], 1)
statsmodels.stats.power.NormalIndPower.cache_fit_res
{'missing', 'builtins.list'}
 /home/user/purepython/cpython-3.9/my_purepy/lib/python3.9/site-packages/statsmodels/stats/tests/test_power.py-test_power_solver-706
    assert_equal(nip.cache_fit_res[0], 1)
statsmodels.stats.power.NormalIndPower.cache_fit_res
{'missing', 'builtins.list'}
 /home/user/purepython/cpython-3.9/my_purepy/lib/python3.9/site-packages/statsmodels/stats/tests/test_power.py-test_power_solver-707
    assert_equal(len(nip.cache_fit_res), 2)
statsmodels.stats.power.NormalIndPower.cache_fit_res
{'missing', 'builtins.list'}
 /home/user/purepython/cpython-3.9/my_purepy/lib/python3.9/site-packages/statsmodels/stats/tests/test_power.py-test_power_solver-715
    assert_equal(nip.cache_fit_res[0], 1)
statsmodels.stats.power.NormalIndPower.cache_fit_res
{'missing', 'builtins.list'}
 /home/user/purepython/cpython-3.9/my_purepy/lib/python3.9/site-packages/statsmodels/stats/tests/test_power.py-test_power_solver-723
    assert_equal(len(nip.cache_fit_res), 4)
statsmodels.tools.testing.Holder.df
{'builtins.int', 'builtins.float', 'missing'}
 /home/user/purepython/cpython-3.9/my_purepy/lib/python3.9/site-packages/statsmodels/stats/tests/test_gof.py-test_chisquare_power-19
        power = chisquare_power(case.w, case.N, case.df + 1,
statsmodels.tools.testing.Holder.pvalue
{'numpy.numpy.float64', 'builtins.float', 'numpy.numpy.ndarray', 'missing'}
 /home/user/purepython/cpython-3.9/my_purepy/lib/python3.9/site-packages/statsmodels/stats/tests/test_oneway.py-test_simulate_equivalence-532
    frac_reject = (res_mc.pvalue <= 0.05).sum(0) / k_mc
statsmodels.tools.testing.Holder.f2
{'builtins.float', 'numpy.numpy.ndarray', 'missing'}
 /home/user/purepython/cpython-3.9/my_purepy/lib/python3.9/site-packages/statsmodels/stats/oneway.py-confint_effectsize_oneway-450
    ci_res.ci_f_corrected = np.sqrt(ci_res.f2 * (df1 + 1) / df1)
statsmodels.regression.linear_model.OLS._wendog_xprod
{'numpy.numpy.float64', 'missing'}
 /home/user/purepython/cpython-3.9/my_purepy/lib/python3.9/site-packages/statsmodels/regression/linear_model.py-score-997
            ssr = self._wendog_xprod - 2 * np.dot(self._wexog_x_wendog.T,
statsmodels.regression.linear_model.OLS._wendog_xprod
{'numpy.numpy.float64', 'missing'}
 /home/user/purepython/cpython-3.9/my_purepy/lib/python3.9/site-packages/statsmodels/regression/linear_model.py-hessian-1037
            ssr = self._wendog_xprod - 2 * np.dot(self._wexog_x_wendog.T,
statsmodels.regression.linear_model.OLS._wexog_xprod
{'missing', 'numpy.numpy.ndarray'}
 /home/user/purepython/cpython-3.9/my_purepy/lib/python3.9/site-packages/statsmodels/regression/linear_model.py-hessian-1041
            hm = self._wexog_xprod / ssr - np.outer(ssrp, ssrp) / ssr**2
statsmodels.regression.linear_model.OLS._wexog_x_wendog
{'missing', 'numpy.numpy.ndarray'}
 /home/user/purepython/cpython-3.9/my_purepy/lib/python3.9/site-packages/statsmodels/regression/linear_model.py-score-997
            ssr = self._wendog_xprod - 2 * np.dot(self._wexog_x_wendog.T,
statsmodels.regression.linear_model.OLS._wexog_x_wendog
{'missing', 'numpy.numpy.ndarray'}
 /home/user/purepython/cpython-3.9/my_purepy/lib/python3.9/site-packages/statsmodels/regression/linear_model.py-hessian-1040
            ssrp = -2*self._wexog_x_wendog + 2*xtxb
statsmodels.regression.linear_model.OLS._wexog_x_wendog
{'missing', 'numpy.numpy.ndarray'}
 /home/user/purepython/cpython-3.9/my_purepy/lib/python3.9/site-packages/statsmodels/regression/linear_model.py-hessian-1037
            ssr = self._wendog_xprod - 2 * np.dot(self._wexog_x_wendog.T,
statsmodels.stats.contrast.ContrastResults.df_num
{'builtins.float', 'missing'}
 /home/user/purepython/cpython-3.9/my_purepy/lib/python3.9/site-packages/statsmodels/stats/tests/test_oneway.py-test_ols_noncentrality-476
        assert_allclose(nc_wt, wt.statistic * wt.df_num, rtol=1e-13)
statsmodels.stats.contrast.ContrastResults.df_num
{'builtins.float', 'missing'}
 /home/user/purepython/cpython-3.9/my_purepy/lib/python3.9/site-packages/statsmodels/stats/tests/test_oneway.py-test_ols_noncentrality-501
        assert_allclose(nc_wt_off, wt_off.statistic * wt_off.df_num,
statsmodels.base.model.LikelihoodModelResults.mle_retvals
{'missing', 'builtins.dict'}
 /home/user/purepython/cpython-3.9/my_purepy/lib/python3.9/site-packages/statsmodels/regression/mixed_linear_model.py-fit-2195
                if rslt.mle_retvals['converged']:
statsmodels.base.model.LikelihoodModelResults.mle_retvals
{'missing', 'builtins.dict'}
 /home/user/purepython/cpython-3.9/my_purepy/lib/python3.9/site-packages/statsmodels/genmod/generalized_linear_model.py-_fit_gradient-1159
                history['iteration'] = rslt.mle_retvals['iterations']
statsmodels.base.model.LikelihoodModelResults.mle_retvals
{'missing', 'builtins.dict'}
 /home/user/purepython/cpython-3.9/my_purepy/lib/python3.9/site-packages/statsmodels/regression/mixed_linear_model.py-fit-2213
        converged = rslt.mle_retvals['converged']
statsmodels.stats.base.HolderTuple.results_larger
{'statsmodels.stats.base.HolderTuple', 'missing'}
 /home/user/purepython/cpython-3.9/my_purepy/lib/python3.9/site-packages/statsmodels/stats/tests/test_nonparametric.py-test_rank_compare_2indep1-396
    assert_allclose(res_tost.results_larger.pvalue, 0.025, rtol=1e-13)
statsmodels.stats.base.HolderTuple.results_larger
{'statsmodels.stats.base.HolderTuple', 'missing'}
 /home/user/purepython/cpython-3.9/my_purepy/lib/python3.9/site-packages/statsmodels/stats/tests/test_nonparametric.py-test_rank_compare_2indep1-424
    assert_allclose(res_tost.results_larger.pvalue, 0.025, rtol=1e-11)
statsmodels.stats.base.HolderTuple.results_smaller
{'statsmodels.stats.base.HolderTuple', 'missing'}
 /home/user/purepython/cpython-3.9/my_purepy/lib/python3.9/site-packages/statsmodels/stats/tests/test_nonparametric.py-test_rank_compare_2indep1-423
    assert_allclose(res_tost.results_smaller.pvalue, 0.025, rtol=1e-11)
statsmodels.stats.base.HolderTuple.results_smaller
{'statsmodels.stats.base.HolderTuple', 'missing'}
 /home/user/purepython/cpython-3.9/my_purepy/lib/python3.9/site-packages/statsmodels/stats/tests/test_nonparametric.py-test_rank_compare_2indep1-395
    assert_allclose(res_tost.results_smaller.pvalue, 0.025, rtol=1e-13)
statsmodels.stats.correlation_tools.GaussianMultivariateKernel.bwk
{'numpy.numpy.float64', 'missing'}
 /home/user/purepython/cpython-3.9/my_purepy/lib/python3.9/site-packages/statsmodels/stats/correlation_tools.py-call-931
        return np.exp(-(x - loc)**2 / (2 * self.bw2)).sum(1) / self.bwk
statsmodels.stats.correlation_tools.GaussianMultivariateKernel.bw2
{'missing', 'numpy.numpy.ndarray'}
 /home/user/purepython/cpython-3.9/my_purepy/lib/python3.9/site-packages/statsmodels/stats/correlation_tools.py-call-931
        return np.exp(-(x - loc)**2 / (2 * self.bw2)).sum(1) / self.bwk
statsmodels.tsa.statespace.kalman_smoother.SmootherResults.nobs_diffuse
{'builtins.int', 'missing'}
 /home/user/purepython/cpython-3.9/my_purepy/lib/python3.9/site-packages/statsmodels/tsa/statespace/kalman_smoother.py-update_smoother-678
        if self.nobs_diffuse > 0:
statsmodels.regression.mixed_linear_model.MixedLMParams.cov_re
{'missing', 'numpy.numpy.ndarray'}
 /home/user/purepython/cpython-3.9/my_purepy/lib/python3.9/site-packages/statsmodels/regression/mixed_linear_model.py-get_packed-424
                cpa = self.cov_re[self._ix]
statsmodels.stats.oaxaca.OaxacaBlinder.submitted_weight
{'builtins.int', 'builtins.NoneType', 'missing'}
 /home/user/purepython/cpython-3.9/my_purepy/lib/python3.9/site-packages/statsmodels/stats/oaxaca.py-variance-196
                1 - self.submitted_weight,
statsmodels.sandbox.stats.multicomp.MultiComparison.groupstats
{'statsmodels.sandbox.stats.multicomp.GroupsStats', 'missing'}
 /home/user/purepython/cpython-3.9/my_purepy/lib/python3.9/site-packages/statsmodels/stats/tests/test_pairwise.py-get_thsd-159
    means = mci.groupstats.groupmean
statsmodels.sandbox.stats.multicomp.MultiComparison.groupstats
{'statsmodels.sandbox.stats.multicomp.GroupsStats', 'missing'}
 /home/user/purepython/cpython-3.9/my_purepy/lib/python3.9/site-packages/statsmodels/stats/tests/test_pairwise.py-get_thsd-160
    nobs = mci.groupstats.groupnobs
statsmodels.sandbox.stats.multicomp.MultiComparison.groupstats
{'statsmodels.sandbox.stats.multicomp.GroupsStats', 'missing'}
 /home/user/purepython/cpython-3.9/my_purepy/lib/python3.9/site-packages/statsmodels/stats/tests/test_pairwise.py-get_thsd-158
    var_ = np.var(mci.groupstats.groupdemean(), ddof=len(mci.groupsunique))
statsmodels.sandbox.stats.multicomp.MultiComparison.groupstats
{'statsmodels.sandbox.stats.multicomp.GroupsStats', 'missing'}
 /home/user/purepython/cpython-3.9/my_purepy/lib/python3.9/site-packages/statsmodels/stats/tests/test_pairwise.py-get_thsd-164
    var2 = (mci.groupstats.groupvarwithin() * (nobs - 1.)).sum() \
statsmodels.sandbox.stats.multicomp.TukeyHSDResults.halfwidths
{'missing', 'numpy.numpy.ndarray'}
 /home/user/purepython/cpython-3.9/my_purepy/lib/python3.9/site-packages/statsmodels/sandbox/stats/multicomp.py-<listcomp>-743
        minrange = [means[i] - self.halfwidths[i] for i in range(len(means))]
statsmodels.sandbox.stats.multicomp.TukeyHSDResults.halfwidths
{'missing', 'numpy.numpy.ndarray'}
 /home/user/purepython/cpython-3.9/my_purepy/lib/python3.9/site-packages/statsmodels/sandbox/stats/multicomp.py-<listcomp>-744
        maxrange = [means[i] + self.halfwidths[i] for i in range(len(means))]
statsmodels.sandbox.stats.multicomp.TukeyHSDResults.halfwidths
{'missing', 'numpy.numpy.ndarray'}
 /home/user/purepython/cpython-3.9/my_purepy/lib/python3.9/site-packages/statsmodels/sandbox/stats/multicomp.py-plot_simultaneous-762
            ax1.errorbar(means[midx], midx, xerr=self.halfwidths[midx],
statsmodels.sandbox.stats.multicomp.TukeyHSDResults.halfwidths
{'missing', 'numpy.numpy.ndarray'}
 /home/user/purepython/cpython-3.9/my_purepy/lib/python3.9/site-packages/statsmodels/sandbox/stats/multicomp.py-plot_simultaneous-776
                             xerr=self.halfwidths[nsigidx], marker='o',
statsmodels.sandbox.stats.multicomp.TukeyHSDResults.halfwidths
{'missing', 'numpy.numpy.ndarray'}
 /home/user/purepython/cpython-3.9/my_purepy/lib/python3.9/site-packages/statsmodels/sandbox/stats/multicomp.py-plot_simultaneous-771
                             xerr=self.halfwidths[sigidx], marker='o',
