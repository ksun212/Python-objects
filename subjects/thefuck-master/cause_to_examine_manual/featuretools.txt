featuretools.primitives.standard.transform.binary.greater_than_scalar.GreaterThanScalar.value
{'builtins.int', 'builtins.float'}
 /home/user/featuretools/featuretools/primitives/standard/transform/binary/greater_than_scalar.py-greater_than_scalar-33
            return vals > self.value
featuretools.feature_base.feature_base.TransformFeature.primitive
{'featuretools.primitives.standard.transform.binary.less_than_equal_to_scalar.LessThanEqualToScalar', 'featuretools.primitives.standard.transform.numeric.negate.Negate', 'featuretools.primitives.standard.transform.binary.or_primitive.Or', 'featuretools.primitives.standard.transform.binary.multiply_numeric.MultiplyNumeric', 'featuretools.primitives.standard.transform.cumulative.cum_sum.CumSum', 'featuretools.primitives.standard.transform.binary.greater_than_equal_to_scalar.GreaterThanEqualToScalar', 'featuretools.primitives.standard.transform.binary.less_than_scalar.LessThanScalar', 'featuretools.primitives.standard.transform.datetime.year.Year', 'featuretools.primitives.standard.transform.binary.greater_than.GreaterThan', 'featuretools.primitives.standard.transform.binary.greater_than_scalar.GreaterThanScalar', 'featuretools.primitives.standard.transform.binary.divide_numeric_scalar.DivideNumericScalar', 'featuretools.primitives.standard.transform.datetime.day.Day', 'featuretools.primitives.standard.transform.datetime.weekday.Weekday', 'featuretools.primitives.standard.transform.binary.not_equal_scalar.NotEqualScalar', 'featuretools.primitives.standard.transform.binary.divide_numeric.DivideNumeric', 'featuretools.primitives.standard.transform.binary.and_primitive.And', 'featuretools.primitives.standard.transform.datetime.month.Month', 'featuretools.primitives.standard.transform.binary.equal_scalar.EqualScalar', 'featuretools.primitives.standard.transform.binary.divide_by_feature.DivideByFeature'}
 /home/user/featuretools/featuretools/feature_base/feature_base.py-get_function-144
        return self.primitive.get_function(**kwargs)
featuretools.feature_base.feature_base.TransformFeature.primitive
{'featuretools.primitives.standard.transform.binary.less_than_equal_to_scalar.LessThanEqualToScalar', 'featuretools.primitives.standard.transform.numeric.negate.Negate', 'featuretools.primitives.standard.transform.binary.or_primitive.Or', 'featuretools.primitives.standard.transform.binary.multiply_numeric.MultiplyNumeric', 'featuretools.primitives.standard.transform.cumulative.cum_sum.CumSum', 'featuretools.primitives.standard.transform.binary.greater_than_equal_to_scalar.GreaterThanEqualToScalar', 'featuretools.primitives.standard.transform.binary.less_than_scalar.LessThanScalar', 'featuretools.primitives.standard.transform.datetime.year.Year', 'featuretools.primitives.standard.transform.binary.greater_than.GreaterThan', 'featuretools.primitives.standard.transform.binary.greater_than_scalar.GreaterThanScalar', 'featuretools.primitives.standard.transform.binary.divide_numeric_scalar.DivideNumericScalar', 'featuretools.primitives.standard.transform.datetime.day.Day', 'featuretools.primitives.standard.transform.datetime.weekday.Weekday', 'featuretools.primitives.standard.transform.binary.not_equal_scalar.NotEqualScalar', 'featuretools.primitives.standard.transform.binary.divide_numeric.DivideNumeric', 'featuretools.primitives.standard.transform.binary.and_primitive.And', 'featuretools.primitives.standard.transform.datetime.month.Month', 'featuretools.primitives.standard.transform.binary.equal_scalar.EqualScalar', 'featuretools.primitives.standard.transform.binary.divide_by_feature.DivideByFeature'}
 /home/user/featuretools/featuretools/feature_base/feature_base.py-column_schema-225
        column_schema = self.primitive.return_type
featuretools.feature_base.feature_base.TransformFeature.primitive
{'featuretools.primitives.standard.transform.binary.less_than_equal_to_scalar.LessThanEqualToScalar', 'featuretools.primitives.standard.transform.numeric.negate.Negate', 'featuretools.primitives.standard.transform.binary.or_primitive.Or', 'featuretools.primitives.standard.transform.binary.multiply_numeric.MultiplyNumeric', 'featuretools.primitives.standard.transform.cumulative.cum_sum.CumSum', 'featuretools.primitives.standard.transform.binary.greater_than_equal_to_scalar.GreaterThanEqualToScalar', 'featuretools.primitives.standard.transform.binary.less_than_scalar.LessThanScalar', 'featuretools.primitives.standard.transform.datetime.year.Year', 'featuretools.primitives.standard.transform.binary.greater_than.GreaterThan', 'featuretools.primitives.standard.transform.binary.greater_than_scalar.GreaterThanScalar', 'featuretools.primitives.standard.transform.binary.divide_numeric_scalar.DivideNumericScalar', 'featuretools.primitives.standard.transform.datetime.day.Day', 'featuretools.primitives.standard.transform.datetime.weekday.Weekday', 'featuretools.primitives.standard.transform.binary.not_equal_scalar.NotEqualScalar', 'featuretools.primitives.standard.transform.binary.divide_numeric.DivideNumeric', 'featuretools.primitives.standard.transform.binary.and_primitive.And', 'featuretools.primitives.standard.transform.datetime.month.Month', 'featuretools.primitives.standard.transform.binary.equal_scalar.EqualScalar', 'featuretools.primitives.standard.transform.binary.divide_by_feature.DivideByFeature'}
 /home/user/featuretools/featuretools/synthesis/utils.py-get_feature_data-35
            transform.add(feature.primitive.name)
featuretools.feature_base.feature_base.TransformFeature.primitive
{'featuretools.primitives.standard.transform.binary.less_than_equal_to_scalar.LessThanEqualToScalar', 'featuretools.primitives.standard.transform.numeric.negate.Negate', 'featuretools.primitives.standard.transform.binary.or_primitive.Or', 'featuretools.primitives.standard.transform.binary.multiply_numeric.MultiplyNumeric', 'featuretools.primitives.standard.transform.cumulative.cum_sum.CumSum', 'featuretools.primitives.standard.transform.binary.greater_than_equal_to_scalar.GreaterThanEqualToScalar', 'featuretools.primitives.standard.transform.binary.less_than_scalar.LessThanScalar', 'featuretools.primitives.standard.transform.datetime.year.Year', 'featuretools.primitives.standard.transform.binary.greater_than.GreaterThan', 'featuretools.primitives.standard.transform.binary.greater_than_scalar.GreaterThanScalar', 'featuretools.primitives.standard.transform.binary.divide_numeric_scalar.DivideNumericScalar', 'featuretools.primitives.standard.transform.datetime.day.Day', 'featuretools.primitives.standard.transform.datetime.weekday.Weekday', 'featuretools.primitives.standard.transform.binary.not_equal_scalar.NotEqualScalar', 'featuretools.primitives.standard.transform.binary.divide_numeric.DivideNumeric', 'featuretools.primitives.standard.transform.binary.and_primitive.And', 'featuretools.primitives.standard.transform.datetime.month.Month', 'featuretools.primitives.standard.transform.binary.equal_scalar.EqualScalar', 'featuretools.primitives.standard.transform.binary.divide_by_feature.DivideByFeature'}
 /home/user/featuretools/featuretools/feature_base/feature_base.py-number_output_features-211
        return self.primitive.number_output_features
featuretools.feature_base.feature_base.TransformFeature.primitive
{'featuretools.primitives.standard.transform.binary.less_than_equal_to_scalar.LessThanEqualToScalar', 'featuretools.primitives.standard.transform.numeric.negate.Negate', 'featuretools.primitives.standard.transform.binary.or_primitive.Or', 'featuretools.primitives.standard.transform.binary.multiply_numeric.MultiplyNumeric', 'featuretools.primitives.standard.transform.cumulative.cum_sum.CumSum', 'featuretools.primitives.standard.transform.binary.greater_than_equal_to_scalar.GreaterThanEqualToScalar', 'featuretools.primitives.standard.transform.binary.less_than_scalar.LessThanScalar', 'featuretools.primitives.standard.transform.datetime.year.Year', 'featuretools.primitives.standard.transform.binary.greater_than.GreaterThan', 'featuretools.primitives.standard.transform.binary.greater_than_scalar.GreaterThanScalar', 'featuretools.primitives.standard.transform.binary.divide_numeric_scalar.DivideNumericScalar', 'featuretools.primitives.standard.transform.datetime.day.Day', 'featuretools.primitives.standard.transform.datetime.weekday.Weekday', 'featuretools.primitives.standard.transform.binary.not_equal_scalar.NotEqualScalar', 'featuretools.primitives.standard.transform.binary.divide_numeric.DivideNumeric', 'featuretools.primitives.standard.transform.binary.and_primitive.And', 'featuretools.primitives.standard.transform.datetime.month.Month', 'featuretools.primitives.standard.transform.binary.equal_scalar.EqualScalar', 'featuretools.primitives.standard.transform.binary.divide_by_feature.DivideByFeature'}
 /home/user/featuretools/featuretools/feature_base/feature_base.py-_check_input_types-191
        input_types = self.primitive.input_types
featuretools.feature_base.feature_base.TransformFeature.primitive
{'featuretools.primitives.standard.transform.binary.less_than_equal_to_scalar.LessThanEqualToScalar', 'featuretools.primitives.standard.transform.numeric.negate.Negate', 'featuretools.primitives.standard.transform.binary.or_primitive.Or', 'featuretools.primitives.standard.transform.binary.multiply_numeric.MultiplyNumeric', 'featuretools.primitives.standard.transform.cumulative.cum_sum.CumSum', 'featuretools.primitives.standard.transform.binary.greater_than_equal_to_scalar.GreaterThanEqualToScalar', 'featuretools.primitives.standard.transform.binary.less_than_scalar.LessThanScalar', 'featuretools.primitives.standard.transform.datetime.year.Year', 'featuretools.primitives.standard.transform.binary.greater_than.GreaterThan', 'featuretools.primitives.standard.transform.binary.greater_than_scalar.GreaterThanScalar', 'featuretools.primitives.standard.transform.binary.divide_numeric_scalar.DivideNumericScalar', 'featuretools.primitives.standard.transform.datetime.day.Day', 'featuretools.primitives.standard.transform.datetime.weekday.Weekday', 'featuretools.primitives.standard.transform.binary.not_equal_scalar.NotEqualScalar', 'featuretools.primitives.standard.transform.binary.divide_numeric.DivideNumeric', 'featuretools.primitives.standard.transform.binary.and_primitive.And', 'featuretools.primitives.standard.transform.datetime.month.Month', 'featuretools.primitives.standard.transform.binary.equal_scalar.EqualScalar', 'featuretools.primitives.standard.transform.binary.divide_by_feature.DivideByFeature'}
 /home/user/featuretools/featuretools/computational_backends/feature_set.py-uses_full_dataframe-214
            and feature.primitive.uses_full_dataframe
featuretools.feature_base.feature_base.TransformFeature.primitive
{'featuretools.primitives.standard.transform.binary.less_than_equal_to_scalar.LessThanEqualToScalar', 'featuretools.primitives.standard.transform.numeric.negate.Negate', 'featuretools.primitives.standard.transform.binary.or_primitive.Or', 'featuretools.primitives.standard.transform.binary.multiply_numeric.MultiplyNumeric', 'featuretools.primitives.standard.transform.cumulative.cum_sum.CumSum', 'featuretools.primitives.standard.transform.binary.greater_than_equal_to_scalar.GreaterThanEqualToScalar', 'featuretools.primitives.standard.transform.binary.less_than_scalar.LessThanScalar', 'featuretools.primitives.standard.transform.datetime.year.Year', 'featuretools.primitives.standard.transform.binary.greater_than.GreaterThan', 'featuretools.primitives.standard.transform.binary.greater_than_scalar.GreaterThanScalar', 'featuretools.primitives.standard.transform.binary.divide_numeric_scalar.DivideNumericScalar', 'featuretools.primitives.standard.transform.datetime.day.Day', 'featuretools.primitives.standard.transform.datetime.weekday.Weekday', 'featuretools.primitives.standard.transform.binary.not_equal_scalar.NotEqualScalar', 'featuretools.primitives.standard.transform.binary.divide_numeric.DivideNumeric', 'featuretools.primitives.standard.transform.binary.and_primitive.And', 'featuretools.primitives.standard.transform.datetime.month.Month', 'featuretools.primitives.standard.transform.binary.equal_scalar.EqualScalar', 'featuretools.primitives.standard.transform.binary.divide_by_feature.DivideByFeature'}
 /home/user/featuretools/featuretools/feature_base/feature_base.py-default_value-267
        return self.primitive.default_value
featuretools.feature_base.feature_base.TransformFeature.primitive
{'featuretools.primitives.standard.transform.binary.less_than_equal_to_scalar.LessThanEqualToScalar', 'featuretools.primitives.standard.transform.numeric.negate.Negate', 'featuretools.primitives.standard.transform.binary.or_primitive.Or', 'featuretools.primitives.standard.transform.binary.multiply_numeric.MultiplyNumeric', 'featuretools.primitives.standard.transform.cumulative.cum_sum.CumSum', 'featuretools.primitives.standard.transform.binary.greater_than_equal_to_scalar.GreaterThanEqualToScalar', 'featuretools.primitives.standard.transform.binary.less_than_scalar.LessThanScalar', 'featuretools.primitives.standard.transform.datetime.year.Year', 'featuretools.primitives.standard.transform.binary.greater_than.GreaterThan', 'featuretools.primitives.standard.transform.binary.greater_than_scalar.GreaterThanScalar', 'featuretools.primitives.standard.transform.binary.divide_numeric_scalar.DivideNumericScalar', 'featuretools.primitives.standard.transform.datetime.day.Day', 'featuretools.primitives.standard.transform.datetime.weekday.Weekday', 'featuretools.primitives.standard.transform.binary.not_equal_scalar.NotEqualScalar', 'featuretools.primitives.standard.transform.binary.divide_numeric.DivideNumeric', 'featuretools.primitives.standard.transform.binary.and_primitive.And', 'featuretools.primitives.standard.transform.datetime.month.Month', 'featuretools.primitives.standard.transform.binary.equal_scalar.EqualScalar', 'featuretools.primitives.standard.transform.binary.divide_by_feature.DivideByFeature'}
 /home/user/featuretools/featuretools/computational_backends/feature_set_calculator.py-_calculate_transform_features-526
            if f.primitive.uses_calc_time:
featuretools.feature_base.feature_base.TransformFeature.primitive
{'featuretools.primitives.standard.transform.binary.less_than_equal_to_scalar.LessThanEqualToScalar', 'featuretools.primitives.standard.transform.numeric.negate.Negate', 'featuretools.primitives.standard.transform.binary.or_primitive.Or', 'featuretools.primitives.standard.transform.binary.multiply_numeric.MultiplyNumeric', 'featuretools.primitives.standard.transform.cumulative.cum_sum.CumSum', 'featuretools.primitives.standard.transform.binary.greater_than_equal_to_scalar.GreaterThanEqualToScalar', 'featuretools.primitives.standard.transform.binary.less_than_scalar.LessThanScalar', 'featuretools.primitives.standard.transform.datetime.year.Year', 'featuretools.primitives.standard.transform.binary.greater_than.GreaterThan', 'featuretools.primitives.standard.transform.binary.greater_than_scalar.GreaterThanScalar', 'featuretools.primitives.standard.transform.binary.divide_numeric_scalar.DivideNumericScalar', 'featuretools.primitives.standard.transform.datetime.day.Day', 'featuretools.primitives.standard.transform.datetime.weekday.Weekday', 'featuretools.primitives.standard.transform.binary.not_equal_scalar.NotEqualScalar', 'featuretools.primitives.standard.transform.binary.divide_numeric.DivideNumeric', 'featuretools.primitives.standard.transform.binary.and_primitive.And', 'featuretools.primitives.standard.transform.datetime.month.Month', 'featuretools.primitives.standard.transform.binary.equal_scalar.EqualScalar', 'featuretools.primitives.standard.transform.binary.divide_by_feature.DivideByFeature'}
 /home/user/featuretools/featuretools/feature_base/feature_base.py-generate_name-883
        return self.primitive.generate_name(

check: 2
safe: 2
